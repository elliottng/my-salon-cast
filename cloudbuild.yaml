# MySalonCast API - Unified Cloud Build Configuration
# Streamlined deployment with environment variable support

steps:
  # Step 1: Build the Docker image
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "-t"
      - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${BUILD_ID}"
      - "-t"
      - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest"
      - "."
    id: "build-image"

  # Step 2: Push the Docker image with BUILD_ID tag
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${BUILD_ID}"]
    id: "push-image"
    waitFor: ["build-image"]

  # Step 3: Push the latest tag
  - name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest"]
    id: "push-latest"
    waitFor: ["build-image"]

  # Step 4: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      - "run"
      - "deploy"
      - "${_SERVICE_NAME}"
      - "--image=gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${BUILD_ID}"
      - "--region=${_REGION}"
      - "--platform=managed"
      - "--allow-unauthenticated"
      - "--port=8000"
      - "--memory=${_MEMORY}"
      - "--cpu=${_CPU}"
      - "--concurrency=${_CONCURRENCY}"
      - "--max-instances=${_MAX_INSTANCES}"
      - "--timeout=${_TIMEOUT}"
      - "--set-env-vars=PROJECT_ID=${PROJECT_ID},ENVIRONMENT=${_ENVIRONMENT},REGION=${_REGION}"
      - "--set-env-vars=GEMINI_API_KEY=${_GEMINI_API_KEY}"
      - "--set-env-vars=FIRECRAWL_API_KEY=${_FIRECRAWL_API_KEY}"
      - "--set-env-vars=FIRECRAWL_ENABLED=${_FIRECRAWL_ENABLED}"
    id: "deploy-cloud-run"
    waitFor: ["push-image"]

  # Step 5: Verify deployment with health check
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        echo "üöÄ Getting service URL..."
        SERVICE_URL=$$(gcloud run services describe ${_SERVICE_NAME} \
          --region=${_REGION} \
          --format='value(status.url)')

        echo "üì° Service URL: $$SERVICE_URL"
        echo "‚è≥ Waiting for service to be ready..."
        sleep 30

        echo "üîç Running health check..."
        if curl -f -s "$$SERVICE_URL/health"; then
          echo "‚úÖ Service deployed successfully!"
          echo "üìö API Documentation: $$SERVICE_URL/docs"
          echo "üéØ Health Check: $$SERVICE_URL/health"
        else
          echo "‚ùå Health check failed"
          echo "üìã Checking service logs..."
          gcloud run logs read --service=${_SERVICE_NAME} --region=${_REGION} --limit=10
          exit 1
        fi
    id: "health-check"
    waitFor: ["deploy-cloud-run"]

# Build configuration
options:
  logging: CLOUD_LOGGING_ONLY

# Substitution variables with sensible defaults
substitutions:
  _SERVICE_NAME: "mysaloncast-api"
  _ENVIRONMENT: "production"
  _REGION: "us-west1"
  _MEMORY: "1Gi"
  _CPU: "1"
  _CONCURRENCY: "80"
  _MAX_INSTANCES: "10"
  _TIMEOUT: "3600s"

  # API Keys - must be provided during build
  _GEMINI_API_KEY: ""
  _FIRECRAWL_API_KEY: ""
  _FIRECRAWL_ENABLED: "false"

# Store built images in Google Container Registry
images:
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:${BUILD_ID}"
  - "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest"

# Build timeout
timeout: "600s"
