commit 5f9dc6272b8564afd69c53316960bd93f0c2695c
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 22:52:20 2025 -0700

    Refactor requirements.txt for improved cross-platform compatibility
    
    ## Problem Addressed:
    - Build failures on other machines due to strict version pinning in requirements.txt
    - Version conflicts between core dependencies (fastapi/anyio/starlette/protobuf)
    - Overly restrictive exact version requirements preventing flexible dependency resolution
    
    ## Changes Made:
    
    ### üì¶ Updated requirements.txt:
    - **Loosened version constraints**: Changed from == to >= for all packages
    - **Fixed version conflicts**:
      - fastapi: 0.104.0 ‚Üí >=0.110.0 (resolves anyio compatibility)
      - anyio: >=4.9.0 ‚Üí >=3.7.1,<5.0.0 (fastapi compatibility range)
      - protobuf: ==4.25.7 ‚Üí >=3.19.5,<5.0.0 (Google Cloud compatibility)
      - starlette: unconstrained ‚Üí >=0.27.0,<0.48.0 (fastapi compatibility)
    - **Organized by functionality**: Core, Pydantic, Google Cloud, HTTP, etc.
    - **Added comments**: Clear section headers and purpose explanations
    
    ### üìÇ File Management:
    - **Created requirements_old.txt**: Backup of original strict requirements
    - **Preserved working environment**: Based on pip freeze from validated setup
    
    ### üîç Dependency Groups Included:
    - **Core Platform**: FastAPI, Uvicorn, Python-dotenv
    - **AI/LLM Stack**: Pydantic-AI, Google Generative AI, Logfire observability
    - **Voice/Audio**: Google Cloud TTS, Pydub audio processing
    - **Content Processing**: BeautifulSoup, YouTube transcript API, PDF processing
    - **Testing**: Pytest, pytest-asyncio
    - **MCP Protocol**: MCP, FastMCP for Model Context Protocol integration
    
    ## Validation:
    - ‚úÖ Based on working environment with successful voice assignment validation
    - ‚úÖ Resolves pip check conflicts in current environment
    - ‚úÖ Maintains compatibility with all MySalonCast features
    - ‚úÖ Supports cross-platform deployment (dev/test/prod environments)
    
    ## Impact:
    - **Improved Developer Experience**: Easier setup on new machines
    - **Reduced Build Failures**: Flexible dependency resolution
    - **Maintained Functionality**: All voice assignment and podcast generation features preserved
    - **Production Ready**: Compatible with deployment environments
    
    This change enables reliable MySalonCast builds across different Python environments while preserving the validated voice assignment implementation and all core functionality.

commit 662e81ecee2521a416a2972b139c0d6cf422a3f5
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 22:07:56 2025 -0700

    Clean up environment files and test utilities
    
    - Removed old environment template files (.env.deploy, .env.production.template, .env.staging.template, .env.test)
    - Removed env.yaml (now properly gitignored)
    - Removed outdated SETUP.md
    - Added test/debug scripts for voice assignment validation
    - Added generated podcasts and transcripts for testing

commit 2eb8e477df1a5260b43af6c1ff06a97ee6ea2d67
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 21:38:57 2025 -0700

    Fix voice assignment and backup voice diversity
    
    - Updated TTS voice cache filtering to exclude older Chirp voices and only use Chirp3-HD voices
    - Relaxed language distribution constraints to allow more AU and UK voices
    - Enhanced backup voice assignment with diverse Chirp3-HD voice pools when cache unavailable
    - Fixed random import scope issue causing voice assignment crashes
    - Added varied speaking rates (0.85-1.15) for backup voices to improve diversity
    - Updated voice cache to 80 Chirp3-HD voices (20 Male, 20 Female, 40 Neutral)
    - Added env.yaml to .gitignore for security
    - Extended MCP integration test duration to 10 minutes for robust testing
    
    Validated through 7.5-minute integration test with successful persona research and voice assignment.

commit 17feefc8b1bd1791e1e8d2a89ca294b4da5d0260
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 20:47:39 2025 -0700

    Fix LLM prompt template formatting errors
    
    - Fixed unmatched curly braces in all prompt templates that caused 'unmatched { in format spec' errors
    - Escaped JSON examples in SOURCE_ANALYSIS_TEMPLATE, PERSONA_RESEARCH_TEMPLATE, PODCAST_OUTLINE_TEMPLATE, and SEGMENT_DIALOGUE_TEMPLATE
    - Updated test URLs in test_mcp_integration.py to use accessible content
    - Resolves analyze_source_text_async failures and enables successful MCP integration workflow
    - Validated with complete end-to-end test (preprocessing ‚Üí audio generation)

commit 6076f49f889d2d505f9a5706b298d9f834f10845
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 14:02:36 2025 -0700

    Fix: MCP server task_directory bug in persona research resource retrieval
    
    - Fixed undefined task_directory variable in get_persona_research_resource()
    - Added proper directory extraction from research file path
    - Created test_persona_resource_fix.py to validate the fix
    - Added TESTING.md with integration test documentation
    
    KNOWN ISSUE: File location mismatch between podcast generation and MCP server
    - Persona research files saved to /tmp/podcast_job_*/ during generation
    - MCP server expects files in /tmp/mysaloncast_text_files/
    - This causes integration test failures at persona research retrieval step
    - TODO: Investigate and fix file location consistency

commit 227953a0e34dc486437ca8ecb33c0fccd47fe8ae
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 11:46:03 2025 -0700

    Fix YouTube content ingestion in podcast workflow
    
    üéØ Problem Solved:
    - YouTube URLs were using generic HTML scraping instead of transcript extraction
    - This caused podcast generation to fail with YouTube content
    
    ‚úÖ Implementation:
    - Modified podcast_workflow.py to detect YouTube URLs using is_valid_youtube_url()
    - Routes YouTube URLs to extract_transcript_from_youtube() instead of extract_content_from_url()
    - Enhanced extract_transcript_from_youtube() with language-specific fetching and fallback logic
    - Added proper error handling for YouTube API exceptions
    
    üß™ Testing:
    - Created comprehensive YouTube integration tests
    - Validated end-to-end workflow with YouTube URL (230s completion)
    - Confirmed transcript extraction, persona research, and podcast generation working
    
    üìÅ Files Modified:
    - app/podcast_workflow.py: Added YouTube URL detection and routing
    - app/content_extractor.py: Improved transcript extraction with language preferences
    - tests/test_mcp_integration.py: Updated test URLs to include YouTube content
    - test_youtube_integration.py: Comprehensive YouTube workflow testing
    - test_youtube_simple.py: Simple YouTube extraction validation
    
    üöÄ Result: YouTube URLs now properly extract video transcripts for podcast generation

commit 1df09cd4483f53c631cbd831076863c408c15d1f
Author: Elliott Ng <elliott.ng@gmail.com>
Date:   Sat Jun 7 08:47:30 2025 -0700

    fix: Correct host name spelling and remove unused legacy file
    
    üîß **Host Name Correction:**
    - Change default host name from 'Brigette' to 'Bridgette' in podcast_workflow.py
    - Affects default host persona when no custom host name provided
    - Corrects spelling in dialogue transcripts and logging output
    
    üßπ **Code Cleanup:**
    - Remove unused app/podcast_workflow_test.py file entirely
    - File was legacy code not imported by MCP server or any active components
    - MCP server uses app/podcast_workflow.py (main workflow file)
    - Reduces codebase maintenance burden
    
    ‚úÖ **Impact:**
    - New podcasts will use correctly spelled host name 'Bridgette'
    - Cleaner codebase with only actively used workflow files
    - No breaking changes to existing functionality
