[project]
name = "my-salon-cast"
version = "0.1.0"
description = "Convert PDF documents and web content into conversational audio podcasts using AI"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Elliott Ng", email = "elliott.ng@gmail.com" },
    { name = "Alexander Ng", email = "an@asu.edu" },
]
license = { text = "MIT" }
keywords = ["podcast", "ai", "tts", "pdf", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core web framework
    "fastapi>=0.115.0",
    "uvicorn>=0.24.0",
    "starlette>=0.27.0",

    # MCP server
    "mcp>=1.9.0",
    "fastmcp>=2.0.0",

    # Google Cloud services
    "google-cloud-storage>=2.10.0",
    "google-cloud-texttospeech>=2.16.0",
    "google-generativeai>=0.8.0",

    # Database
    "sqlmodel>=0.0.24",
    "sqlalchemy>=2.0.0",

    # PDF processing
    "pdfplumber>=0.10.0",
    "pypdfium2>=4.30.0",

    # Audio processing
    "pydub>=0.25.0",

    # HTTP client
    "httpx>=0.28.0",
    "aiohttp>=3.9.0",

    # HTML/Web parsing
    "beautifulsoup4>=4.12.0",
    "youtube-transcript-api>=1.0.0",

    # Environment and config
    "python-dotenv>=1.0.0",
    "pydantic>=2.11.0",
    "pydantic-ai>=0.2.0,<0.3.0",
    "pydantic-settings>=2.9.0",
    "logfire>=0.14.0",

    # Utilities
    "requests>=2.32.0",
    "rich>=14.0.0",
    "typer>=0.16.0",
    "tenacity>=9.1.0",
]

[project.optional-dependencies]
dev = ["pytest>=7.4.0", "pytest-asyncio>=0.23.0"]

[project.scripts]
my-salon-cast = "app.mcp_server:main"

[project.urls]
Homepage = "https://github.com/elliottng/my-salon-cast"
Repository = "https://github.com/elliottng/my-salon-cast"
Issues = "https://github.com/elliottng/my-salon-cast/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = ["--strict-markers", "--strict-config", "--verbose"]
filterwarnings = ["error", "ignore::UserWarning", "ignore::DeprecationWarning"]

[tool.uv]
dev-dependencies = ["pytest>=7.4.0", "pytest-asyncio>=0.23.0"]

[tool.pyright]
typeCheckingMode = "standard"
reportArgumentType = "warning"
